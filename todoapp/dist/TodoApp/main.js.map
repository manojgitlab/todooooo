{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/task-list/task-list-add/task-list-add.component.css","webpack:///./src/app/dashboard/task-list/task-list-add/task-list-add.component.html","webpack:///./src/app/dashboard/task-list/task-list-add/task-list-add.component.ts","webpack:///./src/app/dashboard/task-list/task-list-view.component.css","webpack:///./src/app/dashboard/task-list/task-list-view.component.html","webpack:///./src/app/dashboard/task-list/task-list-view.component.ts","webpack:///./src/app/dashboard/task/task-add/task-add.component.css","webpack:///./src/app/dashboard/task/task-add/task-add.component.html","webpack:///./src/app/dashboard/task/task-add/task-add.component.ts","webpack:///./src/app/dashboard/task/task.component.css","webpack:///./src/app/dashboard/task/task.component.html","webpack:///./src/app/dashboard/task/task.component.ts","webpack:///./src/app/dashboard/task/taskupdate/taskupdate.component.css","webpack:///./src/app/dashboard/task/taskupdate/taskupdate.component.html","webpack:///./src/app/dashboard/task/taskupdate/taskupdate.component.ts","webpack:///./src/app/model/Task.ts","webpack:///./src/app/model/TaskList.ts","webpack:///./src/app/service/task.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container {\\n    background: lightblue;\\n}\"","module.exports = \"<app-dashboard></app-dashboard>\"","import { Component, OnInit, OnChanges } from '@angular/core';\n\n \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n   \n  ngOnInit(){\n  \n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MatTooltipModule,MatIconModule,MatCardModule} from '@angular/material';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { TaskListViewComponent} from './dashboard/task-list/task-list-view.component';\nimport { TaskComponent } from './dashboard/task/task.component';\nimport { TaskListAddComponent } from './dashboard/task-list/task-list-add/task-list-add.component';\nimport { TaskAddComponent } from './dashboard/task/task-add/task-add.component'\nimport { FormsModule } from '@angular/forms';\nimport { TaskupdateComponent } from './dashboard/task/taskupdate/taskupdate.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskListViewComponent,\n    TaskComponent,\n    TaskListAddComponent,\n    TaskAddComponent,\n    TaskupdateComponent,\n    DashboardComponent,\n    TaskAddComponent\n  ],\n  imports: [\n    MatIconModule,\n    FormsModule,\n    NgbModule,\n    MatTooltipModule,\n    MatIconModule,\n    HttpClientModule,\n    MatCardModule,\n    BrowserAnimationsModule,\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports:[TaskListViewComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"\\n<mat-card class='container'>\\n  <div class=\\\"row\\\">\\n    <div [ngClass]=\\\"showGrid()\\\">\\n      <app-task-list-view (notifiy)='getTask($event)'> </app-task-list-view>\\n    </div>\\n    <div *ngIf=\\\"taskList\\\" class=\\\"col-sm-6\\\" >\\n      <app-task  [taskList]=\\\"taskList\\\"></app-task>\\n    </div>\\n  </div>\\n</mat-card>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { TaskList } from '../model/TaskList';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n   //Variable Declarations\n    taskList:TaskList;\n    showgrid:string=\"false\";\n  //Variable Declaration End here \n  constructor(private http: HttpClient) {\n \n   }\n   ngOnInit(){\n  \n   }\n   getTask(event){\n    this.taskList=event;\n    this.showgrid=\"true\";\n    console.log(this.taskList);\n  }\n  showGrid(){\n    if(this.showgrid==\"true\"){\n      return \"col-sm-6\" ;\n    }\n    else{\n      return \"col-sm-12\" ;\n    }\n  }\n}\n","module.exports = \".heading{\\n    font-weight: bold;\\n    color: crimson;\\n}\\n\\n.space{\\n    margin-left: 2ch;\\n}\"","module.exports = \"<mat-card>\\n    <div class=\\\"heading\\\">\\n        Add new Task \\n    </div>\\n    \\n<div class=\\\"form-group\\\">\\n    <br>\\n        <label style=\\\"font-weight:bold;\\\" for=\\\"usr\\\">Task Name:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"#task>\\n        <br>\\n        <button type=\\\"button\\\" *ngIf=\\\"!isEditable\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addTask(task.value)\\\">Add Task</button>\\n        <button type=\\\"button\\\" *ngIf=\\\"isEditable\\\" class=\\\"btn btn-primary space\\\" (click)=\\\"updateTask(task.value)\\\">Update Task</button>\\n        <button type=\\\"button\\\" *ngIf=\\\"isEditable\\\" class=\\\"btn btn-primary space\\\" (click)=\\\"deleteTask()\\\">Delete Task</button>\\n        <button type=\\\"button\\\" *ngIf=\\\"isEditable\\\" class=\\\"btn btn-primary space\\\"  (click)=\\\"close()\\\">Close</button>\\n        <a *ngIf=\\\"err\\\" style=\\\"color:red;font-weight: bold;\\\"><br>Error: {{err}}</a>\\n</div>\\n</mat-card>\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { TaskList } from '../../../model/TaskList';\nimport {TaskService} from '../../../service/task.service'\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\n@Component({\n  selector: 'app-task-list-add',\n  templateUrl: './task-list-add.component.html',\n  styleUrls: ['./task-list-add.component.css']\n})\nexport class TaskListAddComponent implements OnInit {\n\n  constructor(private taskService:TaskService,private modalService: NgbModal) { }\n @Input() id:number;\n @Output() refreshList:EventEmitter<string>=new EventEmitter<string>()\n isEditable:boolean=false;\n taskList:TaskList;\n err:string;\n  ngOnInit() {\n    debugger;\n    if(this.id!=-1){ \n      this.isEditable=true;\n        this.taskService.getTaskList(this.id).subscribe(data=>{\n        this.taskList=data;\n        console.log(this.taskList);\n      });\n    }\n  }\n\n  addTask(taskname:string){\n    if(taskname.trim()==\"\"){\n      this.err=\"Task name cannot be empty\"\n      return;\n    }\n    let task=new TaskList();\n    //initializing task object before sending to server\n    task.id=0;\n    task.name=taskname;\n    task.tasks=[];\n\n    //sending task to server\n    this.taskService.addNewTaskList(task).subscribe(data=>{\n      this.refreshList.emit(\"\");\n      this.modalService.dismissAll();\n     \n    })  \n  }\n\n  updateTask(taskName:string){\n    if(taskName.trim()==\"\"){\n      this.err=\"Task name cannot be empty\"\n      return;\n    }\n    let taskList=this.taskList;\n    taskList.name=taskName;\n    this.taskService.updateTaskListName(taskList).subscribe(data=>{\n     \n      this.refreshList.emit(\"\");\n      this.modalService.dismissAll();\n      console.log(\"Emitting event\")\n    });\n}\n\n\ndeleteTask(){\n  console.log(\"Deleteing task list\")\n  this.taskService.DeleteTaskList(this.id).subscribe(data=>{\n    this.refreshList.emit(\"\");\n    this.modalService.dismissAll();\n  \n  },\n  err=>{\n    console.log(\"Deleteing task list with error\")\n  }\n)\n\nconsole.log(\"Deleteing task list completed\")\n}\nclose(){\n  this.modalService.dismissAll();\n}\n\n\n\n\n}\n","module.exports = \".right{\\n    float: right;\\n}\\nhr.style13 {\\n\\theight: 10px;\\n\\tborder: 0;\\n\\tbox-shadow: 0 10px 10px -10px #8c8b8b inset;\\n}\\n.headline{\\n     font-family: Arial, Helvetica, sans-serif;\\n     color:tomato;\\n     font-weight: bold;\\n     font-size: 150%;\\n }\\n.item{\\n     \\n    font-weight: 600; \\n }\"","module.exports = \"<mat-card>\\n    <!-- Todo List heading start here -->\\n    <mat-card>\\n        <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-3\\\"><mat-icon>beenhere</mat-icon></div>                \\n                <div class=\\\"col-sm-6 headline\\\">To-Do List</div>\\n                <div class=\\\"col-sm-3\\\" (click)=\\\"addDialog(content)\\\">\\n                    <mat-icon  matTooltip=\\\"New Task\\\">queue</mat-icon>\\n                </div>                \\n        </div>\\n    </mat-card>\\n    <!-- Todo List Heading end here -->\\n\\n    <br>\\n\\n<!-- To show All task List  -->\\n        <div *ngFor=\\\"let taskList of taskLists\\\"> \\n                <div class=\\\"divider\\\" class=\\\"row\\\" >\\n                        <div class=\\\"col-sm-3\\\">\\n                            <mat-icon>bookmark</mat-icon>\\n                        </div>\\n                        \\n                        <div class=\\\"col-sm-6 item\\\" matTooltip=\\\"Tap to see detail\\\" (click)=\\\"showTaskItems(taskList)\\\" >\\n                            {{taskList.name}}\\n                        </div>\\n                        \\n                        <div class=\\\"col-sm-3\\\" (click)=\\\"editDialog(content,taskList)\\\">\\n                            <mat-icon matTooltip=\\\"Edit Task\\\">border_color</mat-icon>\\n                        </div>                              \\n                </div>                \\n                <hr class=\\\"style13\\\">\\n        </div>\\n  <!-- End of list-->     \\n</mat-card>\\n\\n\\n<!-- showing popup codes start here -->\\n<ng-template #content let-modal>\\n        <app-task-list-add [id]=\\\"id\\\" (refreshList)=\\\"refreshList($event)\\\"></app-task-list-add>\\n</ng-template> \\n<!-- showing popup codes end here -->\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { TaskService } from '../../service/task.service';\nimport { TaskList } from '../../model/TaskList';\nimport { Task } from '../../model/Task';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-task-list-view',\n  templateUrl: './task-list-view.component.html',\n  styleUrls: ['./task-list-view.component.css']\n})\nexport class TaskListViewComponent implements OnInit {\n  //Variable Declarations\n  taskLists: TaskList[];\n  taskList:TaskList;\n  id:number;\n\n  @Output() notifiy:EventEmitter<TaskList>=new EventEmitter<TaskList>();\n  //Variable Declaration End here\n\n\n  constructor(private modalService: NgbModal,\n              private taskService: TaskService\n             ) {\n\n  }\n\n  ngOnInit() {\n    this.getAllTaskList();\n  }\n\n  getAllTaskList() {\n    this.taskService.getTaskLists().subscribe(taskLists => {\n      this.taskLists = taskLists;\n      console.log(taskLists);\n    })\n  }\n\n  showTaskItems(taskList:TaskList){\n    this.notifiy.emit(taskList);\n  }\n\n  addDialog(content){\n    this.id=-1;\n    this.modalService.open(content, { centered: true }); \n  }\n\n  editDialog(content,taskList:TaskList){\n    this.id=taskList.id;\n    this.taskList=taskList;\n    this.modalService.open(content, { centered: true }); \n  }\n  \n  deleteFromTaskList(event){\n    this.taskLists=this.taskLists.filter(taskList=>taskList.id!==event.id)\n  }\n\n  refreshList(event){\n    console.log(\"RefreshList\");\n    console.log(event);\n    \n    this.getAllTaskList();\n  }\n}\n","module.exports = \".err{\\n    font-weight: bold;\\n    color: red;\\n}\\n\"","module.exports = \"<mat-card>\\n        <div class=\\\"heading\\\">\\n            Add new Task Item\\n        </div>\\n        \\n    <div class=\\\"form-group\\\">\\n        <br>\\n            <label style=\\\"font-weight:bold;\\\" for=\\\"usr\\\">Task Name:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\"#task>\\n            <br>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addTask(task.value)\\\">Add Task</button>\\n            <a *ngIf=\\\"err\\\" style=\\\"color:red;font-weight: bold;\\\"><br>Error: {{err}}</a>\\n    </div>\\n    </mat-card>\\n   \"","import { Component, OnInit, Input } from '@angular/core';\nimport { Task } from '../../../model/Task';\nimport { TaskService } from '../../../service/task.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport { TaskList } from '../../../model/TaskList';\n@Component({\n  selector: 'app-task-add',\n  templateUrl: './task-add.component.html',\n  styleUrls: ['./task-add.component.css']\n})\nexport class TaskAddComponent implements OnInit {\n error:string;\n@Input() taskList:TaskList;\n  constructor(private taskService:TaskService,private modalService: NgbModal) { }\n  err:string;\n  ngOnInit() {\n   \n  }\n  addTask(taskname:string){\n   \n    if(taskname.trim()===\"\"){  //validation\n     this.err=\"Please enter valid task name\";\n     return;\n   }\n    let task=new Task();\n    //initializing task object before sending to server\n    task.id=0;\n    task.name=taskname;\n    task.taskListId=this.taskList.id;\n    //sending task to server\n    this.taskService.addNewTask(task).subscribe(data=>{\n      this.taskList.tasks.push(data);\n      this.modalService.dismissAll();\n    })\n    \n  }\n}\n","module.exports = \"\\nhr.style18:before { \\n    display: block; \\n    content: \\\"\\\"; \\n    height: 30px; \\n    margin-top: -31px; \\n    border-style: solid; \\n    border-color: #8c8b8b; \\n    border-width: 0 0 1px 0; \\n    border-radius: 20px; \\n  }\"","module.exports = \"<mat-card>\\n        <!-- Todo List heading start here -->\\n        <mat-card>\\n            <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-3\\\"><mat-icon>beenhere</mat-icon></div>                \\n                    <div class=\\\"col-sm-6 headline\\\"> {{taskList.name}} </div>\\n                    <div class=\\\"col-sm-3\\\" (click)=\\\"addDialog(content)\\\">\\n                        <mat-icon  matTooltip=\\\"New Task\\\">queue</mat-icon>\\n                    </div>                \\n            </div>\\n        </mat-card>\\n        <!-- Todo List Heading end here -->\\n    \\n        <br>\\n    \\n    <!-- To show All task List  -->\\n            <div *ngFor=\\\"let task of taskList.tasks\\\"> \\n                    <div class=\\\"divider\\\" class=\\\"row\\\" >\\n                            <div class=\\\"col-sm-1\\\">\\n                                <mat-icon>assignment</mat-icon>\\n                            </div>\\n                            \\n                            <div class=\\\"col-sm-6 item\\\">\\n                                {{task.name}}\\n                            </div>\\n                            \\n                            <div class=\\\"col-sm-2\\\">\\n                                    <mat-icon (click)=\\\"markComplete(task)\\\" *ngIf=\\\"task.status\\\" matTooltip=\\\"Task Is Completed\\\">check_box</mat-icon>\\n                                    <mat-icon (click)=\\\"markComplete(task)\\\" *ngIf=\\\"!task.status\\\" matTooltip=\\\"Click here to mark as complete\\\">check_box_outline_blank</mat-icon>\\n                           \\n                            </div>\\n\\n                            <div class=\\\"col-sm-2\\\" (click)=\\\"editDialog(edit,task)\\\">                              \\n                                <mat-icon matTooltip=\\\"Edit Task\\\">border_color</mat-icon>\\n                            </div>                              \\n                    </div>                \\n                    <hr class=\\\"style18\\\">\\n            </div>\\n      <!-- End of list-->     \\n    </mat-card>\\n    \\n    \\n    <!-- showing popup codes start here -->\\n    <ng-template #content let-modal>\\n            <app-task-add [taskList]=\\\"taskList\\\"></app-task-add> \\n    </ng-template>\\n           \\n    <ng-template #edit let-modal>\\n           <app-taskupdate (deleteTaskFromList)='deleteTaskFromList($event)' [task]=\\\"task\\\"></app-taskupdate>  \\n    </ng-template>\\n    \\n    <!-- showing popup codes end here -->\\n    \"","import { Component, OnInit, Input } from '@angular/core';\nimport { TaskList } from '../../model/TaskList';\nimport { Task } from '../../model/Task';\nimport { TaskService } from '../../service/task.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { debug } from 'util';\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n //Variable Declarations\n   @Input() taskList:TaskList;\n   task:Task;\n //Variable Declaration End here\n \n constructor(private taskService: TaskService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    console.log(this.taskList)\n  }\n\n  editDialog(edit,task:Task){\n    this.task=task;\n    this.modalService.open(edit, { centered: true }); \n  }\n\n  addDialog(content){\n    this.modalService.open(content, { centered: true }); \n  }\n  markComplete(task:Task){\n    let item=task;\n    if(item.status==true){\n      item.status=false;\n    }\n    else{\n      item.status=true;\n    }\n \n    this.taskService.updateTask(item).subscribe(data=>{\n      task=data;\n    })\n  }\n\n  deleteTaskFromList(event){\n    debugger;\n    console.log(\"Deleting task from list \");\n    console.log(eventn   this.taskList.tasks=this.taskList.tasks.filter(task=> task.id!==event.id);\n  }\n}\n","module.exports = \".space{\\n    margin-left: 2ch;\\n}\"","module.exports = \"<mat-card>\\n    <div class=\\\"heading\\\">\\n        Modify/Delete Task Item\\n    </div>\\n    \\n<div class=\\\"form-group\\\">\\n    <br>\\n        <label style=\\\"font-weight:bold;\\\" for=\\\"usr\\\">Task Name:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"taskName\\\">\\n        <br>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateTask()\\\">Update Task</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary space\\\" (click)=\\\"deleteTask()\\\">Delete Task</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary space\\\" (click)=\\\"close()\\\">Close</button>\\n        <a *ngIf=\\\"err\\\" style=\\\"color:red;font-weight: bold;\\\"><br>Error: {{err}}</a>\\n        \\n</div>\\n</mat-card>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Task } from '../../../model/Task';\nimport { TaskService } from '../../../service/task.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n \n@Component({\n  selector: 'app-taskupdate',\n  templateUrl: './taskupdate.component.html',\n  styleUrls: ['./taskupdate.component.css']\n})\nexport class TaskupdateComponent implements OnInit {\n \n  @Input() task:Task;\n  taskName:string;\n err:string;\n  \n @Output() deleteTaskFromList:EventEmitter<Task>=new EventEmitter<Task>();\n \n  constructor(private taskService: TaskService, private modalService: NgbModal) {\n   \n  }\n\n  ngOnInit() {\n    this.taskName=this.task.name;\n  }\n  updateTask(){\n    if(this.taskName.trim()==\"\"){\n      this.err=\"Task name cannot be empty\"\n      return;\n    }\n    let item=new Task();\n    item=this.task;\n    item.name=this.taskName;\n\n    this.taskService.updateTask(item).subscribe(data=>{\n        this.task.name=this.taskName;\n        this.modalService.dismissAll();\n    })\n\n  }\n\n  deleteTask(){\n    this.taskService.DeleteTask(this.task).subscribe(data=>{\n      console.log(\"Deleted Successfully\");\n      \n      this.deleteTaskFromList.emit(this.task);\n      this.modalService.dismissAll();\n    },err=>{\n      console.log(\"Error in deleting\");\n      console.log(err);\n    });\n   \n  }\n  close(){\n    this.modalService.dismissAll();\n  }\n   \n}\n","export class Task{\nid:number;\nname:string;\nstatus:boolean;\ntaskListId:number;\n}\n","import {Task} from'./Task';\n\nexport class TaskList{\n  id:number;\n  name:string;\n  tasks:Task[];  \n}","import { Injectable } from '@angular/core';\nimport {TaskList} from '../model/TaskList';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Task } from '../model/Task';\nimport { debug } from 'util';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\nURL:String=\"http://18.188.162.176:9090\";\n  constructor(private http: HttpClient) { }\n  getTaskList(id:number){\n    return this.http.get<TaskList>(this.URL+\"/taskList/\"+id);   \n  }\n  getTaskLists(){\n    return this.http.get<TaskList[]>(this.URL+\"/taskList\");\n  }\n  \n  addNewTaskList(taskList:TaskList){ \n  \n    return this.http.post<TaskList>(this.URL+\"/taskList\",taskList);\n  }\n  updateTaskListName(taskList:TaskList){\n    return this.http.put<Task>(this.URL+\"/taskList\",taskList);\n  }\n\n  DeleteTaskList(id:number){\n    return this.http.delete<Task>(this.URL+\"/taskList/\"+id)\n  }\n  \n  addNewTask(task:Task){   \n    return this.http.post<Task>(this.URL+\"/task\",task);\n  }\n  updateTask(task:Task){\n    return this.http.put<Task>(this.URL+\"/task\",task);\n  }\n\n  DeleteTask(task:Task){\n    return this.http.delete<Task>(this.URL+\"/task/\"+task.id);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}